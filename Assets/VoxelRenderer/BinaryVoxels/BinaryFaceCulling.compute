// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
StructuredBuffer<int> voxelMap;
RWStructuredBuffer<int> frontFaces, backFaces, leftFaces, rightFaces, upFaces, downFaces;

int size;

[numthreads(8,1,8)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    int x = id.x;
    int z = id.z;

    if (x >= size || z >= size)
        return;

    int index = x + z * size;

    int column = voxelMap[index];

    if (z > 0)
        frontFaces[index] = ~(column & voxelMap[index - size]) & column;

    if (z < size)
        backFaces[index] = ~(column & voxelMap[index + size]) & column;

    if (x > 0)
        leftFaces[index] = ~(column & voxelMap[index - 1]) & column;

    if (x < size)
        rightFaces[index] = ~(column & voxelMap[index + 1]) & column;

    upFaces[index] = (column << 1) | 1;

    downFaces[index] = (column >> 1) | 1;
}
