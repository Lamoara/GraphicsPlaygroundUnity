// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
StructuredBuffer<int> voxelGrid;
RWStructuredBuffer<int> visibleFaces;

int width;
int height;
int depth;

[numthreads(8,8,8)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    int x = id.x;
    int y = id.y;
    int z = id.z;

    int index = x + y * width + z * width * height;
    if (voxelGrid[index] == 0) return;

    int vertexBaseIndex = index * 8;
    int triangleBaseIndex = index * 12;

    bool left = (x > 0) ? voxelGrid[index - 1] == 0 : true;
    bool right = (x < width - 1) ? voxelGrid[index + 1] == 0 : true;
    bool bottom = (y > 0) ? voxelGrid[index - width] == 0 : true;
    bool top = (y < height - 1) ? voxelGrid[index + width] == 0 : true;
    bool back = (z > 0) ? voxelGrid[index - width * height] == 0 : true;
    bool front = (z < depth - 1) ? voxelGrid[index + width * height] == 0 : true;

    visibleFaces[index] = (left << 0) | (right << 1) | (bottom << 2) | (top << 3) | (back << 4) | (front << 5);
}
